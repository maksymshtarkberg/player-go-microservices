syntax = "proto3";

package main;

option go_package = ".";


service SongService {
  rpc UploadSong(UploadSongRequest) returns (UploadSongResponse);

  rpc StreamSongFile(StreamSongFileRequest) returns (stream StreamSongFileResponse);

  rpc StreamAlbumCover(StreamAlbumCoverRequest) returns (stream StreamAlbumCoverResponse);

  rpc GetUserSongs(GetUserSongsRequest) returns (GetUserSongsResponse);

  rpc GetAllSongs(GetAllSongsRequest) returns (GetAllSongsResponse);

  rpc UpdateSongMetadata(UpdateSongMetadataRequest) returns (UpdateSongMetadataResponse);

  rpc DeleteSong(DeleteSongRequest) returns (DeleteSongResponse);

}

message UploadSongRequest {
  string title = 1;
  string artist = 2;
  string album = 3;
  string description = 4;
  string uploaded_by = 5;
  bytes song_file = 6;
  bytes album_cover = 7;
}

message UploadSongResponse {
  string message = 1;
  string status = 2;
  string song_id = 3;
  string cover_id = 4;
}

message StreamSongFileRequest {
  string song_file_id = 1;
}

message StreamSongFileResponse {
  bytes chunk = 1;
}

message StreamAlbumCoverRequest {
  string album_cover_id = 1;
}

message StreamAlbumCoverResponse {
  bytes chunk = 1;
}

message SongMetadata {
    string _id = 1;
    string title = 2;
    string artist = 3;
    string album = 4;
    string description = 5;
    string uploadedBy = 6;
    string songFileID = 7;
    string albumCoverID = 8;
}

message GetUserSongsRequest {
  string user_id = 1;
}

message GetUserSongsResponse {
  repeated SongMetadata songs = 1;
}

message GetAllSongsRequest {}

message GetAllSongsResponse {
  repeated SongMetadata songs = 1;
}

message UpdateSongMetadataRequest {
  string song_id = 1;
  string title = 2;
  string artist = 3;
  string album = 4;
  string description = 5;
}

message UpdateSongMetadataResponse {
  string message = 1;
  bool success = 2;
}

message DeleteSongRequest {
  string song_id = 1;
  string song_file_id = 2;
  string album_cover_id = 3;
}

message DeleteSongResponse {
  string message = 1;
  bool success = 2;
}