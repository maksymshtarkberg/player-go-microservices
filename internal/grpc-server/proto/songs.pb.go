// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: songs.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadSongRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Artist      string `protobuf:"bytes,2,opt,name=artist,proto3" json:"artist,omitempty"`
	Album       string `protobuf:"bytes,3,opt,name=album,proto3" json:"album,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	UploadedBy  string `protobuf:"bytes,5,opt,name=uploaded_by,json=uploadedBy,proto3" json:"uploaded_by,omitempty"`
	SongFile    []byte `protobuf:"bytes,6,opt,name=song_file,json=songFile,proto3" json:"song_file,omitempty"`
	AlbumCover  []byte `protobuf:"bytes,7,opt,name=album_cover,json=albumCover,proto3" json:"album_cover,omitempty"`
}

func (x *UploadSongRequest) Reset() {
	*x = UploadSongRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_songs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadSongRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadSongRequest) ProtoMessage() {}

func (x *UploadSongRequest) ProtoReflect() protoreflect.Message {
	mi := &file_songs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadSongRequest.ProtoReflect.Descriptor instead.
func (*UploadSongRequest) Descriptor() ([]byte, []int) {
	return file_songs_proto_rawDescGZIP(), []int{0}
}

func (x *UploadSongRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UploadSongRequest) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *UploadSongRequest) GetAlbum() string {
	if x != nil {
		return x.Album
	}
	return ""
}

func (x *UploadSongRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UploadSongRequest) GetUploadedBy() string {
	if x != nil {
		return x.UploadedBy
	}
	return ""
}

func (x *UploadSongRequest) GetSongFile() []byte {
	if x != nil {
		return x.SongFile
	}
	return nil
}

func (x *UploadSongRequest) GetAlbumCover() []byte {
	if x != nil {
		return x.AlbumCover
	}
	return nil
}

type UploadSongResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status  string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	SongId  string `protobuf:"bytes,3,opt,name=song_id,json=songId,proto3" json:"song_id,omitempty"`
	CoverId string `protobuf:"bytes,4,opt,name=cover_id,json=coverId,proto3" json:"cover_id,omitempty"`
}

func (x *UploadSongResponse) Reset() {
	*x = UploadSongResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_songs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadSongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadSongResponse) ProtoMessage() {}

func (x *UploadSongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_songs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadSongResponse.ProtoReflect.Descriptor instead.
func (*UploadSongResponse) Descriptor() ([]byte, []int) {
	return file_songs_proto_rawDescGZIP(), []int{1}
}

func (x *UploadSongResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UploadSongResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UploadSongResponse) GetSongId() string {
	if x != nil {
		return x.SongId
	}
	return ""
}

func (x *UploadSongResponse) GetCoverId() string {
	if x != nil {
		return x.CoverId
	}
	return ""
}

type StreamSongFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SongFileId string `protobuf:"bytes,1,opt,name=song_file_id,json=songFileId,proto3" json:"song_file_id,omitempty"`
}

func (x *StreamSongFileRequest) Reset() {
	*x = StreamSongFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_songs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamSongFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamSongFileRequest) ProtoMessage() {}

func (x *StreamSongFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_songs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamSongFileRequest.ProtoReflect.Descriptor instead.
func (*StreamSongFileRequest) Descriptor() ([]byte, []int) {
	return file_songs_proto_rawDescGZIP(), []int{2}
}

func (x *StreamSongFileRequest) GetSongFileId() string {
	if x != nil {
		return x.SongFileId
	}
	return ""
}

type StreamSongFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunk []byte `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
}

func (x *StreamSongFileResponse) Reset() {
	*x = StreamSongFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_songs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamSongFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamSongFileResponse) ProtoMessage() {}

func (x *StreamSongFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_songs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamSongFileResponse.ProtoReflect.Descriptor instead.
func (*StreamSongFileResponse) Descriptor() ([]byte, []int) {
	return file_songs_proto_rawDescGZIP(), []int{3}
}

func (x *StreamSongFileResponse) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type StreamAlbumCoverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlbumCoverId string `protobuf:"bytes,1,opt,name=album_cover_id,json=albumCoverId,proto3" json:"album_cover_id,omitempty"`
}

func (x *StreamAlbumCoverRequest) Reset() {
	*x = StreamAlbumCoverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_songs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamAlbumCoverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamAlbumCoverRequest) ProtoMessage() {}

func (x *StreamAlbumCoverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_songs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamAlbumCoverRequest.ProtoReflect.Descriptor instead.
func (*StreamAlbumCoverRequest) Descriptor() ([]byte, []int) {
	return file_songs_proto_rawDescGZIP(), []int{4}
}

func (x *StreamAlbumCoverRequest) GetAlbumCoverId() string {
	if x != nil {
		return x.AlbumCoverId
	}
	return ""
}

type StreamAlbumCoverResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunk []byte `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
}

func (x *StreamAlbumCoverResponse) Reset() {
	*x = StreamAlbumCoverResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_songs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamAlbumCoverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamAlbumCoverResponse) ProtoMessage() {}

func (x *StreamAlbumCoverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_songs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamAlbumCoverResponse.ProtoReflect.Descriptor instead.
func (*StreamAlbumCoverResponse) Descriptor() ([]byte, []int) {
	return file_songs_proto_rawDescGZIP(), []int{5}
}

func (x *StreamAlbumCoverResponse) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type SongMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XId          string `protobuf:"bytes,1,opt,name=_id,json=Id,proto3" json:"_id,omitempty"`
	Title        string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Artist       string `protobuf:"bytes,3,opt,name=artist,proto3" json:"artist,omitempty"`
	Album        string `protobuf:"bytes,4,opt,name=album,proto3" json:"album,omitempty"`
	Description  string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	UploadedBy   string `protobuf:"bytes,6,opt,name=uploadedBy,proto3" json:"uploadedBy,omitempty"`
	SongFileID   string `protobuf:"bytes,7,opt,name=songFileID,proto3" json:"songFileID,omitempty"`
	AlbumCoverID string `protobuf:"bytes,8,opt,name=albumCoverID,proto3" json:"albumCoverID,omitempty"`
}

func (x *SongMetadata) Reset() {
	*x = SongMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_songs_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SongMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SongMetadata) ProtoMessage() {}

func (x *SongMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_songs_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SongMetadata.ProtoReflect.Descriptor instead.
func (*SongMetadata) Descriptor() ([]byte, []int) {
	return file_songs_proto_rawDescGZIP(), []int{6}
}

func (x *SongMetadata) GetXId() string {
	if x != nil {
		return x.XId
	}
	return ""
}

func (x *SongMetadata) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SongMetadata) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *SongMetadata) GetAlbum() string {
	if x != nil {
		return x.Album
	}
	return ""
}

func (x *SongMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SongMetadata) GetUploadedBy() string {
	if x != nil {
		return x.UploadedBy
	}
	return ""
}

func (x *SongMetadata) GetSongFileID() string {
	if x != nil {
		return x.SongFileID
	}
	return ""
}

func (x *SongMetadata) GetAlbumCoverID() string {
	if x != nil {
		return x.AlbumCoverID
	}
	return ""
}

type GetUserSongsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserSongsRequest) Reset() {
	*x = GetUserSongsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_songs_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSongsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSongsRequest) ProtoMessage() {}

func (x *GetUserSongsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_songs_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSongsRequest.ProtoReflect.Descriptor instead.
func (*GetUserSongsRequest) Descriptor() ([]byte, []int) {
	return file_songs_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserSongsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserSongsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Songs []*SongMetadata `protobuf:"bytes,1,rep,name=songs,proto3" json:"songs,omitempty"`
}

func (x *GetUserSongsResponse) Reset() {
	*x = GetUserSongsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_songs_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSongsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSongsResponse) ProtoMessage() {}

func (x *GetUserSongsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_songs_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSongsResponse.ProtoReflect.Descriptor instead.
func (*GetUserSongsResponse) Descriptor() ([]byte, []int) {
	return file_songs_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserSongsResponse) GetSongs() []*SongMetadata {
	if x != nil {
		return x.Songs
	}
	return nil
}

type GetAllSongsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllSongsRequest) Reset() {
	*x = GetAllSongsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_songs_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllSongsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllSongsRequest) ProtoMessage() {}

func (x *GetAllSongsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_songs_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllSongsRequest.ProtoReflect.Descriptor instead.
func (*GetAllSongsRequest) Descriptor() ([]byte, []int) {
	return file_songs_proto_rawDescGZIP(), []int{9}
}

type GetAllSongsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Songs []*SongMetadata `protobuf:"bytes,1,rep,name=songs,proto3" json:"songs,omitempty"`
}

func (x *GetAllSongsResponse) Reset() {
	*x = GetAllSongsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_songs_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllSongsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllSongsResponse) ProtoMessage() {}

func (x *GetAllSongsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_songs_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllSongsResponse.ProtoReflect.Descriptor instead.
func (*GetAllSongsResponse) Descriptor() ([]byte, []int) {
	return file_songs_proto_rawDescGZIP(), []int{10}
}

func (x *GetAllSongsResponse) GetSongs() []*SongMetadata {
	if x != nil {
		return x.Songs
	}
	return nil
}

type UpdateSongMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SongId      string `protobuf:"bytes,1,opt,name=song_id,json=songId,proto3" json:"song_id,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Artist      string `protobuf:"bytes,3,opt,name=artist,proto3" json:"artist,omitempty"`
	Album       string `protobuf:"bytes,4,opt,name=album,proto3" json:"album,omitempty"`
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *UpdateSongMetadataRequest) Reset() {
	*x = UpdateSongMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_songs_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSongMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSongMetadataRequest) ProtoMessage() {}

func (x *UpdateSongMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_songs_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSongMetadataRequest.ProtoReflect.Descriptor instead.
func (*UpdateSongMetadataRequest) Descriptor() ([]byte, []int) {
	return file_songs_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateSongMetadataRequest) GetSongId() string {
	if x != nil {
		return x.SongId
	}
	return ""
}

func (x *UpdateSongMetadataRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateSongMetadataRequest) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *UpdateSongMetadataRequest) GetAlbum() string {
	if x != nil {
		return x.Album
	}
	return ""
}

func (x *UpdateSongMetadataRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type UpdateSongMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UpdateSongMetadataResponse) Reset() {
	*x = UpdateSongMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_songs_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSongMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSongMetadataResponse) ProtoMessage() {}

func (x *UpdateSongMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_songs_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSongMetadataResponse.ProtoReflect.Descriptor instead.
func (*UpdateSongMetadataResponse) Descriptor() ([]byte, []int) {
	return file_songs_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateSongMetadataResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateSongMetadataResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeleteSongRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SongId       string `protobuf:"bytes,1,opt,name=song_id,json=songId,proto3" json:"song_id,omitempty"`
	SongFileId   string `protobuf:"bytes,2,opt,name=song_file_id,json=songFileId,proto3" json:"song_file_id,omitempty"`
	AlbumCoverId string `protobuf:"bytes,3,opt,name=album_cover_id,json=albumCoverId,proto3" json:"album_cover_id,omitempty"`
}

func (x *DeleteSongRequest) Reset() {
	*x = DeleteSongRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_songs_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSongRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSongRequest) ProtoMessage() {}

func (x *DeleteSongRequest) ProtoReflect() protoreflect.Message {
	mi := &file_songs_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSongRequest.ProtoReflect.Descriptor instead.
func (*DeleteSongRequest) Descriptor() ([]byte, []int) {
	return file_songs_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteSongRequest) GetSongId() string {
	if x != nil {
		return x.SongId
	}
	return ""
}

func (x *DeleteSongRequest) GetSongFileId() string {
	if x != nil {
		return x.SongFileId
	}
	return ""
}

func (x *DeleteSongRequest) GetAlbumCoverId() string {
	if x != nil {
		return x.AlbumCoverId
	}
	return ""
}

type DeleteSongResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteSongResponse) Reset() {
	*x = DeleteSongResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_songs_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSongResponse) ProtoMessage() {}

func (x *DeleteSongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_songs_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSongResponse.ProtoReflect.Descriptor instead.
func (*DeleteSongResponse) Descriptor() ([]byte, []int) {
	return file_songs_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteSongResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteSongResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_songs_proto protoreflect.FileDescriptor

var file_songs_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x73, 0x6f, 0x6e, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d,
	0x61, 0x69, 0x6e, 0x22, 0xd8, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x6f,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x6f, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x22, 0x7a,
	0x0a, 0x12, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x6e, 0x67, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x15, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x53, 0x6f, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x6e, 0x67, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x16, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53,
	0x6f, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x63, 0x68, 0x75, 0x6e, 0x6b, 0x22, 0x3f, 0x0a, 0x17, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x41,
	0x6c, 0x62, 0x75, 0x6d, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x24, 0x0a, 0x0e, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x43,
	0x6f, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x18, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x22, 0xe9, 0x01, 0x0a, 0x0c, 0x53, 0x6f, 0x6e,
	0x67, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0f, 0x0a, 0x03, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x62, 0x75,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x42, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x0c, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x6f, 0x76,
	0x65, 0x72, 0x49, 0x44, 0x22, 0x2e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x6f, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x6f, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05,
	0x73, 0x6f, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x53, 0x6f, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x05, 0x73, 0x6f, 0x6e, 0x67, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x53, 0x6f, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3f, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x6f, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x73, 0x6f, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x6f, 0x6e, 0x67, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x05, 0x73, 0x6f, 0x6e, 0x67, 0x73, 0x22, 0x9a, 0x01,
	0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x6f, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f,
	0x6e, 0x67, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x50, 0x0a, 0x1a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x74, 0x0a, 0x11,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x6f,
	0x6e, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x6f, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e,
	0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x6f, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x48, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0x97, 0x04, 0x0a,
	0x0b, 0x53, 0x6f, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x0a,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x6f, 0x6e, 0x67, 0x12, 0x17, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a,
	0x0e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x6f, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x1b, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x6f, 0x6e,
	0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x6f, 0x6e, 0x67, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x53, 0x0a, 0x10,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x6f, 0x76, 0x65, 0x72,
	0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30,
	0x01, 0x12, 0x45, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x6f, 0x6e, 0x67,
	0x73, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x6f, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x6f, 0x6e, 0x67, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x53, 0x6f, 0x6e, 0x67, 0x73, 0x12, 0x18, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x6f, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53,
	0x6f, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x12,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1f, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x6f, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x6f, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x6f, 0x6e, 0x67, 0x12, 0x17, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x03, 0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_songs_proto_rawDescOnce sync.Once
	file_songs_proto_rawDescData = file_songs_proto_rawDesc
)

func file_songs_proto_rawDescGZIP() []byte {
	file_songs_proto_rawDescOnce.Do(func() {
		file_songs_proto_rawDescData = protoimpl.X.CompressGZIP(file_songs_proto_rawDescData)
	})
	return file_songs_proto_rawDescData
}

var file_songs_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_songs_proto_goTypes = []any{
	(*UploadSongRequest)(nil),          // 0: main.UploadSongRequest
	(*UploadSongResponse)(nil),         // 1: main.UploadSongResponse
	(*StreamSongFileRequest)(nil),      // 2: main.StreamSongFileRequest
	(*StreamSongFileResponse)(nil),     // 3: main.StreamSongFileResponse
	(*StreamAlbumCoverRequest)(nil),    // 4: main.StreamAlbumCoverRequest
	(*StreamAlbumCoverResponse)(nil),   // 5: main.StreamAlbumCoverResponse
	(*SongMetadata)(nil),               // 6: main.SongMetadata
	(*GetUserSongsRequest)(nil),        // 7: main.GetUserSongsRequest
	(*GetUserSongsResponse)(nil),       // 8: main.GetUserSongsResponse
	(*GetAllSongsRequest)(nil),         // 9: main.GetAllSongsRequest
	(*GetAllSongsResponse)(nil),        // 10: main.GetAllSongsResponse
	(*UpdateSongMetadataRequest)(nil),  // 11: main.UpdateSongMetadataRequest
	(*UpdateSongMetadataResponse)(nil), // 12: main.UpdateSongMetadataResponse
	(*DeleteSongRequest)(nil),          // 13: main.DeleteSongRequest
	(*DeleteSongResponse)(nil),         // 14: main.DeleteSongResponse
}
var file_songs_proto_depIdxs = []int32{
	6,  // 0: main.GetUserSongsResponse.songs:type_name -> main.SongMetadata
	6,  // 1: main.GetAllSongsResponse.songs:type_name -> main.SongMetadata
	0,  // 2: main.SongService.UploadSong:input_type -> main.UploadSongRequest
	2,  // 3: main.SongService.StreamSongFile:input_type -> main.StreamSongFileRequest
	4,  // 4: main.SongService.StreamAlbumCover:input_type -> main.StreamAlbumCoverRequest
	7,  // 5: main.SongService.GetUserSongs:input_type -> main.GetUserSongsRequest
	9,  // 6: main.SongService.GetAllSongs:input_type -> main.GetAllSongsRequest
	11, // 7: main.SongService.UpdateSongMetadata:input_type -> main.UpdateSongMetadataRequest
	13, // 8: main.SongService.DeleteSong:input_type -> main.DeleteSongRequest
	1,  // 9: main.SongService.UploadSong:output_type -> main.UploadSongResponse
	3,  // 10: main.SongService.StreamSongFile:output_type -> main.StreamSongFileResponse
	5,  // 11: main.SongService.StreamAlbumCover:output_type -> main.StreamAlbumCoverResponse
	8,  // 12: main.SongService.GetUserSongs:output_type -> main.GetUserSongsResponse
	10, // 13: main.SongService.GetAllSongs:output_type -> main.GetAllSongsResponse
	12, // 14: main.SongService.UpdateSongMetadata:output_type -> main.UpdateSongMetadataResponse
	14, // 15: main.SongService.DeleteSong:output_type -> main.DeleteSongResponse
	9,  // [9:16] is the sub-list for method output_type
	2,  // [2:9] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_songs_proto_init() }
func file_songs_proto_init() {
	if File_songs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_songs_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*UploadSongRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_songs_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*UploadSongResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_songs_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*StreamSongFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_songs_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*StreamSongFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_songs_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*StreamAlbumCoverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_songs_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*StreamAlbumCoverResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_songs_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*SongMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_songs_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserSongsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_songs_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserSongsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_songs_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllSongsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_songs_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllSongsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_songs_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSongMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_songs_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSongMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_songs_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteSongRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_songs_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteSongResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_songs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_songs_proto_goTypes,
		DependencyIndexes: file_songs_proto_depIdxs,
		MessageInfos:      file_songs_proto_msgTypes,
	}.Build()
	File_songs_proto = out.File
	file_songs_proto_rawDesc = nil
	file_songs_proto_goTypes = nil
	file_songs_proto_depIdxs = nil
}
